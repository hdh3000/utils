package masters

import (
	"bytes"
	"compress/gzip"
	"io"
)

// files_styles_css returns raw, uncompressed file data.
func files_styles_css() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x9c, 0x56,
		0xcb, 0x72, 0xdb, 0x3a, 0x12, 0xdd, 0xf3, 0x2b, 0xba, 0xe2, 0x9a, 0x8a,
		0x9d, 0x6a, 0xea, 0x95, 0x48, 0xce, 0xd0, 0x55, 0x59, 0xcf, 0x22, 0xb3,
		0x9b, 0x1f, 0x00, 0x88, 0x26, 0x89, 0x08, 0x04, 0x68, 0xa0, 0x29, 0x5b,
		0xc9, 0xe4, 0xdf, 0x6f, 0x81, 0xaf, 0x50, 0x2f, 0xe7, 0xe6, 0x96, 0x5d,
		0xa2, 0x08, 0xa0, 0x5f, 0xe7, 0x9c, 0x6e, 0x28, 0x59, 0x7e, 0x80, 0x8a,
		0xb9, 0xc9, 0x96, 0xcb, 0x9a, 0x8e, 0xe4, 0x5f, 0x48, 0x2e, 0x72, 0x57,
		0x2f, 0xc9, 0xeb, 0x7c, 0xc9, 0xce, 0x99, 0xb0, 0xcc, 0x43, 0x58, 0x7a,
		0x0a, 0xc4, 0xcb, 0x04, 0x00, 0x0e, 0x9b, 0xc5, 0x0a, 0xfe, 0x0f, 0x9b,
		0xd5, 0x7a, 0xbd, 0x5a, 0x6f, 0x76, 0x71, 0xe9, 0xab, 0xce, 0xc9, 0x06,
		0xca, 0xc0, 0x3a, 0x4b, 0x70, 0xdf, 0xb4, 0xd2, 0xe8, 0x1c, 0x94, 0xab,
		0x85, 0xb6, 0x0f, 0xc9, 0x87, 0x65, 0x92, 0x54, 0x5c, 0x1b, 0x04, 0xe9,
		0xd4, 0x11, 0x41, 0xe9, 0x03, 0x42, 0x68, 0x84, 0x45, 0x10, 0x4d, 0x63,
		0x88, 0x11, 0x9c, 0xfc, 0x46, 0x39, 0x23, 0xe8, 0xc2, 0x8b, 0x9a, 0x30,
		0xa9, 0xd6, 0x08, 0xd5, 0x06, 0xa1, 0xfa, 0x88, 0x50, 0x7d, 0x42, 0xa8,
		0xb6, 0x08, 0xd5, 0x0e, 0xa1, 0x41, 0x90, 0xc6, 0xe5, 0xfb, 0xe7, 0xd6,
		0x31, 0x21, 0x34, 0x9e, 0x30, 0x11, 0x08, 0x42, 0x4a, 0x8f, 0x20, 0x72,
		0xef, 0xec, 0xb1, 0x46, 0x10, 0x4a, 0x79, 0x0a, 0x01, 0x41, 0xea, 0x12,
		0x21, 0xd7, 0xf1, 0x68, 0xee, 0x14, 0x61, 0xa2, 0xc8, 0x20, 0xa8, 0xc2,
		0x22, 0x50, 0x8d, 0xa0, 0xeb, 0x12, 0x41, 0xdb, 0x80, 0xb0, 0x97, 0x0a,
		0xe1, 0x19, 0x21, 0x20, 0x04, 0x51, 0x37, 0x98, 0x84, 0x5a, 0x18, 0x83,
		0x10, 0xd8, 0xeb, 0x3d, 0x75, 0x4f, 0x67, 0x4b, 0x84, 0xd0, 0xca, 0xf8,
		0xd1, 0x20, 0x30, 0x23, 0x1c, 0x84, 0xc7, 0x44, 0x22, 0xb4, 0x08, 0x1a,
		0x21, 0x27, 0xcb, 0xe4, 0x31, 0x51, 0x31, 0x04, 0x23, 0x28, 0x85, 0xe0,
		0x0c, 0x42, 0x6b, 0x10, 0x8c, 0xc6, 0xa4, 0xd0, 0x64, 0x54, 0x88, 0xd5,
		0x16, 0xce, 0xd7, 0x08, 0x46, 0xc8, 0x98, 0x8d, 0xa1, 0x92, 0xac, 0xc2,
		0x84, 0x85, 0x34, 0x31, 0x4f, 0xd1, 0xb0, 0x76, 0x16, 0x81, 0x7b, 0xb0,
		0xb8, 0x70, 0x8e, 0x11, 0xb8, 0x22, 0xa1, 0x10, 0xd8, 0xc7, 0xaf, 0x08,
		0xac, 0x30, 0x11, 0x9e, 0x75, 0x1e, 0x4d, 0x44, 0xd0, 0xaa, 0xb3, 0xb4,
		0x07, 0x11, 0x10, 0x14, 0xb1, 0xd0, 0x26, 0xc4, 0x12, 0x25, 0xa9, 0x18,
		0xb7, 0x6c, 0x3d, 0x21, 0x14, 0xba, 0x9c, 0x9c, 0x47, 0xa7, 0xe4, 0x11,
		0xa2, 0xd7, 0xee, 0x59, 0x7a, 0xd7, 0x36, 0x98, 0xd4, 0x64, 0x5b, 0x04,
		0x2b, 0x0e, 0x08, 0xae, 0xe5, 0xa6, 0x65, 0x04, 0xdf, 0xca, 0x23, 0x42,
		0xa0, 0xbc, 0xb7, 0x0c, 0x6d, 0x5d, 0x0b, 0x7f, 0xc4, 0x84, 0x75, 0x4d,
		0x08, 0xb5, 0xf0, 0x7b, 0x04, 0xd1, 0x2a, 0xed, 0x10, 0x0e, 0x5a, 0x91,
		0x83, 0x1f, 0x51, 0x11, 0x71, 0xa3, 0xd4, 0x36, 0x83, 0xd5, 0x53, 0xf7,
		0xda, 0x08, 0xa5, 0xb4, 0x2d, 0xa7, 0x77, 0xe9, 0xbc, 0x22, 0x3f, 0xbd,
		0x16, 0xce, 0x72, 0x1a, 0xf4, 0x77, 0xca, 0x60, 0xbd, 0x5a, 0xfd, 0xeb,
		0xd7, 0x62, 0x06, 0xda, 0x56, 0xe4, 0x35, 0xf7, 0x4b, 0x07, 0x8a, 0x45,
		0x0b, 0x93, 0x0a, 0xa3, 0x4b, 0x9b, 0x81, 0x14, 0x81, 0x8c, 0xb6, 0xf4,
		0x94, 0xfc, 0x8c, 0x3a, 0xfe, 0xcf, 0xff, 0xfe, 0xfb, 0x75, 0x0b, 0x4a,
		0x87, 0xc6, 0x88, 0x63, 0xea, 0x9d, 0x21, 0xe8, 0x74, 0x1b, 0x11, 0x07,
		0x67, 0x14, 0x79, 0x90, 0xde, 0xbd, 0x04, 0xf2, 0x01, 0x3e, 0x2c, 0x2f,
		0x10, 0x9c, 0x90, 0x3b, 0x81, 0xaa, 0x87, 0x2f, 0xb9, 0x01, 0x19, 0xcc,
		0x20, 0x1b, 0x40, 0x1a, 0x10, 0x18, 0xd2, 0xc8, 0x7a, 0xc5, 0xc6, 0x0c,
		0x23, 0xa3, 0xc3, 0xa6, 0x14, 0xf9, 0x3e, 0x3a, 0xb0, 0x2a, 0xcd, 0x9d,
		0x71, 0x3e, 0x83, 0xbb, 0x62, 0x5b, 0xec, 0x8a, 0xc7, 0xbe, 0xce, 0x58,
		0x53, 0x5a, 0x91, 0x2e, 0x2b, 0xce, 0x60, 0x1d, 0x6d, 0x7b, 0x25, 0x0d,
		0xd6, 0x46, 0x07, 0x4e, 0x03, 0x1f, 0xcd, 0xd0, 0x72, 0x9d, 0xf3, 0x59,
		0x5f, 0x3c, 0x0f, 0xe7, 0xba, 0xd7, 0x70, 0xed, 0x4c, 0x26, 0xa9, 0x70,
		0x51, 0x15, 0xb3, 0x25, 0x51, 0x74, 0xfa, 0x7d, 0x9e, 0xf6, 0x9e, 0xfb,
		0xa5, 0xc1, 0x59, 0xee, 0x2c, 0x53, 0x64, 0xe4, 0xfd, 0xfb, 0xa7, 0xd3,
		0x85, 0xd1, 0x7d, 0x27, 0xe1, 0xb1, 0xc0, 0x8e, 0xe0, 0x58, 0x9c, 0x11,
		0x4d, 0x1c, 0x0d, 0xe3, 0xb7, 0x39, 0xff, 0x69, 0x68, 0x44, 0x3e, 0xca,
		0xe2, 0x67, 0x92, 0xdc, 0xf5, 0xe0, 0x9e, 0x03, 0x58, 0x18, 0x7a, 0xed,
		0xcd, 0x5e, 0xb4, 0xe2, 0x6a, 0xae, 0x91, 0x09, 0xa3, 0xd5, 0xaa, 0x19,
		0xce, 0xc4, 0xd3, 0xa9, 0xd2, 0xbe, 0x27, 0xa3, 0x0b, 0xdc, 0xd6, 0xb6,
		0xdf, 0xfb, 0xd6, 0x06, 0xd6, 0xc5, 0x31, 0x9d, 0x52, 0xef, 0x0e, 0x93,
		0x55, 0x4f, 0x67, 0xac, 0x64, 0x70, 0xb7, 0x7a, 0xdc, 0xed, 0xb6, 0x9b,
		0x33, 0xf9, 0x6e, 0xa6, 0x30, 0x13, 0x6d, 0x45, 0x51, 0xf4, 0x2b, 0x4c,
		0xaf, 0x9c, 0xb2, 0x17, 0x36, 0xc4, 0x06, 0xcf, 0x62, 0x2b, 0x6b, 0x16,
		0x46, 0x7f, 0xa7, 0x0b, 0x91, 0x7f, 0xa4, 0x7a, 0xbe, 0xd6, 0x33, 0xd9,
		0x1d, 0xce, 0x3b, 0x20, 0x92, 0x3b, 0xe3, 0x4a, 0x77, 0xa9, 0x15, 0x5d,
		0x8b, 0x92, 0x32, 0x68, 0xbd, 0xb9, 0x7f, 0x17, 0x4f, 0x2c, 0x1a, 0x5b,
		0xbe, 0x7b, 0x98, 0x43, 0xf7, 0x05, 0x32, 0xcb, 0x55, 0x9a, 0x57, 0xda,
		0xa8, 0xfb, 0xcd, 0xc3, 0x6d, 0x28, 0xcf, 0x61, 0xf2, 0xee, 0xa5, 0xdf,
		0xe8, 0x5a, 0x2b, 0xd5, 0x4c, 0x75, 0xc8, 0xc0, 0x50, 0xc1, 0x17, 0xd9,
		0x2f, 0xd6, 0x63, 0xfa, 0xd7, 0xf1, 0x0c, 0x2c, 0xfc, 0x60, 0x55, 0x6b,
		0x9b, 0x8e, 0xa4, 0x7d, 0xda, 0x46, 0xec, 0xde, 0xc8, 0xf5, 0x4b, 0xbc,
		0x1a, 0xe6, 0xe3, 0x23, 0xf5, 0x23, 0xbb, 0x83, 0xa5, 0x17, 0x76, 0xaf,
		0x6d, 0x19, 0x6e, 0x97, 0x75, 0x92, 0x7d, 0x3f, 0x92, 0x7f, 0x2f, 0x8b,
		0x21, 0xc3, 0xcf, 0xa3, 0xaa, 0x46, 0x6e, 0xb7, 0xff, 0x8e, 0x7f, 0x97,
		0xf5, 0x3f, 0xc6, 0xfa, 0x23, 0x4d, 0x8b, 0x98, 0x50, 0x9a, 0x0b, 0xaf,
		0x7e, 0xab, 0xd9, 0xdd, 0x3f, 0x54, 0x68, 0x6c, 0x11, 0x4a, 0x25, 0xf1,
		0x0b, 0xd1, 0x70, 0x66, 0x9c, 0xad, 0xeb, 0xc9, 0xe3, 0xa4, 0xcf, 0xf5,
		0x76, 0x5c, 0x1a, 0x3a, 0xcc, 0x0b, 0xa5, 0xdb, 0x30, 0x3f, 0x2b, 0xdd,
		0x6b, 0x1a, 0x2a, 0xa1, 0xdc, 0x4b, 0x06, 0x2b, 0x58, 0x37, 0xaf, 0xb0,
		0x6b, 0x5e, 0x61, 0x05, 0xbe, 0x94, 0xe2, 0x7e, 0x85, 0x30, 0xfc, 0x2f,
		0x56, 0x9f, 0x1f, 0xae, 0xa3, 0x71, 0x5a, 0x78, 0xca, 0x9a, 0xa7, 0xae,
		0xff, 0x13, 0x9d, 0xcd, 0x00, 0xdd, 0xdc, 0xd4, 0xd3, 0x59, 0xf5, 0x3f,
		0xaf, 0x44, 0xee, 0x54, 0xf3, 0x87, 0xf1, 0x6f, 0xfb, 0x99, 0x7b, 0x1b,
		0x44, 0x18, 0x7b, 0x20, 0x83, 0x8f, 0x67, 0xc0, 0x4a, 0xc7, 0xec, 0xea,
		0xac, 0x03, 0x30, 0x38, 0xa3, 0x15, 0x74, 0xad, 0xdf, 0x08, 0x4f, 0x96,
		0x9f, 0xde, 0x12, 0xf1, 0x95, 0xc8, 0x59, 0xa1, 0x7d, 0xe0, 0xbe, 0x13,
		0xce, 0x5f, 0x6f, 0x37, 0xc4, 0x9b, 0xd9, 0xc4, 0xf9, 0xb5, 0x1d, 0xe7,
		0xd7, 0x48, 0xe1, 0xb8, 0x76, 0x95, 0xc2, 0x2f, 0x90, 0x19, 0x71, 0x16,
		0x76, 0xae, 0xfa, 0xed, 0x6f, 0x86, 0xd6, 0xcc, 0x61, 0xe4, 0xcf, 0x6b,
		0x79, 0x9b, 0x95, 0x37, 0x07, 0xc7, 0xe4, 0xab, 0xbb, 0x62, 0xff, 0x3e,
		0xb5, 0xf3, 0x3e, 0xfa, 0xd5, 0x11, 0x13, 0xec, 0xd1, 0x3c, 0xde, 0x39,
		0xb9, 0xf3, 0x17, 0x98, 0xff, 0x98, 0xb7, 0xea, 0xe3, 0x84, 0xee, 0x5b,
		0x23, 0xfd, 0x9a, 0xcb, 0x2b, 0xa3, 0x77, 0x9c, 0x7e, 0x9b, 0xd1, 0xe7,
		0x2d, 0x26, 0xbb, 0x58, 0xc3, 0xef, 0x9a, 0x6e, 0xf3, 0x94, 0x3a, 0xa5,
		0x36, 0x62, 0x23, 0x06, 0xea, 0xce, 0xe3, 0x5e, 0xf0, 0x36, 0x11, 0x5e,
		0x6c, 0xa4, 0x7c, 0x7c, 0xba, 0xcc, 0xf6, 0xd2, 0x64, 0xfc, 0x49, 0xd6,
		0xdf, 0xe6, 0x97, 0xe5, 0xfd, 0x79, 0x87, 0x9f, 0x69, 0x73, 0xb1, 0x1d,
		0xc5, 0x79, 0x7e, 0xa9, 0x36, 0xaf, 0xb1, 0xbd, 0xe0, 0x53, 0xff, 0x3c,
		0x1d, 0x72, 0x71, 0xf3, 0x16, 0x85, 0x17, 0xad, 0x3a, 0x80, 0x3a, 0x39,
		0x39, 0xd1, 0xef, 0xe7, 0x61, 0x6a, 0x2f, 0x58, 0x53, 0x2a, 0x3d, 0x89,
		0x7d, 0x77, 0x07, 0xbd, 0x3d, 0x3d, 0xae, 0x48, 0xfd, 0xd6, 0x6d, 0x70,
		0xc5, 0xef, 0x35, 0x6a, 0x4e, 0xa6, 0x4a, 0x7f, 0x25, 0xfe, 0x15, 0x00,
		0x00, 0xff, 0xff, 0xe7, 0x77, 0x02, 0xc7, 0x84, 0x0d, 0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
